/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCallbackRouteImport } from './routes/auth.callback'
import { Route as AppRoomRouteImport } from './routes/app/room'
import { Route as AppProfileRouteImport } from './routes/app/profile'
import { Route as AppOnboardingRouteImport } from './routes/app/onboarding'
import { Route as AppHistoryRouteImport } from './routes/app/history'
import { Route as AppFriendsRouteImport } from './routes/app/friends'
import { Route as AppDashboardRouteImport } from './routes/app/dashboard'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoomRoute = AppRoomRouteImport.update({
  id: '/room',
  path: '/room',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppProfileRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppOnboardingRoute = AppOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppHistoryRoute = AppHistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppFriendsRoute = AppFriendsRouteImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/app/dashboard': typeof AppDashboardRoute
  '/app/friends': typeof AppFriendsRoute
  '/app/history': typeof AppHistoryRoute
  '/app/onboarding': typeof AppOnboardingRoute
  '/app/profile': typeof AppProfileRoute
  '/app/room': typeof AppRoomRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/app/dashboard': typeof AppDashboardRoute
  '/app/friends': typeof AppFriendsRoute
  '/app/history': typeof AppHistoryRoute
  '/app/onboarding': typeof AppOnboardingRoute
  '/app/profile': typeof AppProfileRoute
  '/app/room': typeof AppRoomRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/app/dashboard': typeof AppDashboardRoute
  '/app/friends': typeof AppFriendsRoute
  '/app/history': typeof AppHistoryRoute
  '/app/onboarding': typeof AppOnboardingRoute
  '/app/profile': typeof AppProfileRoute
  '/app/room': typeof AppRoomRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/signin'
    | '/signup'
    | '/app/dashboard'
    | '/app/friends'
    | '/app/history'
    | '/app/onboarding'
    | '/app/profile'
    | '/app/room'
    | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/signin'
    | '/signup'
    | '/app/dashboard'
    | '/app/friends'
    | '/app/history'
    | '/app/onboarding'
    | '/app/profile'
    | '/app/room'
    | '/auth/callback'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/signin'
    | '/signup'
    | '/app/dashboard'
    | '/app/friends'
    | '/app/history'
    | '/app/onboarding'
    | '/app/profile'
    | '/app/room'
    | '/auth/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/room': {
      id: '/app/room'
      path: '/room'
      fullPath: '/app/room'
      preLoaderRoute: typeof AppRoomRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/profile': {
      id: '/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/onboarding': {
      id: '/app/onboarding'
      path: '/onboarding'
      fullPath: '/app/onboarding'
      preLoaderRoute: typeof AppOnboardingRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/history': {
      id: '/app/history'
      path: '/history'
      fullPath: '/app/history'
      preLoaderRoute: typeof AppHistoryRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/friends': {
      id: '/app/friends'
      path: '/friends'
      fullPath: '/app/friends'
      preLoaderRoute: typeof AppFriendsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/dashboard': {
      id: '/app/dashboard'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
  AppFriendsRoute: typeof AppFriendsRoute
  AppHistoryRoute: typeof AppHistoryRoute
  AppOnboardingRoute: typeof AppOnboardingRoute
  AppProfileRoute: typeof AppProfileRoute
  AppRoomRoute: typeof AppRoomRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
  AppFriendsRoute: AppFriendsRoute,
  AppHistoryRoute: AppHistoryRoute,
  AppOnboardingRoute: AppOnboardingRoute,
  AppProfileRoute: AppProfileRoute,
  AppRoomRoute: AppRoomRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
