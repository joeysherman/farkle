/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthCallbackImport } from './routes/auth.callback'
import { Route as AppRoomImport } from './routes/app/room'
import { Route as AppProfileImport } from './routes/app/profile'
import { Route as AppHistoryImport } from './routes/app/history'
import { Route as AppFriendsImport } from './routes/app/friends'
import { Route as AppDashboardImport } from './routes/app/dashboard'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

const AppRoomRoute = AppRoomImport.update({
  path: '/room',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProfileRoute = AppProfileImport.update({
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppHistoryRoute = AppHistoryImport.update({
  path: '/history',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppFriendsRoute = AppFriendsImport.update({
  path: '/friends',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/app/dashboard': {
      id: '/app/dashboard'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof AppRouteImport
    }
    '/app/friends': {
      id: '/app/friends'
      path: '/friends'
      fullPath: '/app/friends'
      preLoaderRoute: typeof AppFriendsImport
      parentRoute: typeof AppRouteImport
    }
    '/app/history': {
      id: '/app/history'
      path: '/history'
      fullPath: '/app/history'
      preLoaderRoute: typeof AppHistoryImport
      parentRoute: typeof AppRouteImport
    }
    '/app/profile': {
      id: '/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileImport
      parentRoute: typeof AppRouteImport
    }
    '/app/room': {
      id: '/app/room'
      path: '/room'
      fullPath: '/app/room'
      preLoaderRoute: typeof AppRoomImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AppRouteRoute: AppRouteRoute.addChildren({
    AppDashboardRoute,
    AppFriendsRoute,
    AppHistoryRoute,
    AppProfileRoute,
    AppRoomRoute,
  }),
  OnboardingRoute,
  SigninRoute,
  SignupRoute,
  AuthCallbackRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/onboarding",
        "/signin",
        "/signup",
        "/auth/callback"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/dashboard",
        "/app/friends",
        "/app/history",
        "/app/profile",
        "/app/room"
      ]
    },
    "/onboarding": {
      "filePath": "onboarding.ts"
    },
    "/signin": {
      "filePath": "signin.ts"
    },
    "/signup": {
      "filePath": "signup.ts"
    },
    "/app/dashboard": {
      "filePath": "app/dashboard.ts",
      "parent": "/app"
    },
    "/app/friends": {
      "filePath": "app/friends.ts",
      "parent": "/app"
    },
    "/app/history": {
      "filePath": "app/history.ts",
      "parent": "/app"
    },
    "/app/profile": {
      "filePath": "app/profile.ts",
      "parent": "/app"
    },
    "/app/room": {
      "filePath": "app/room.ts",
      "parent": "/app"
    },
    "/auth/callback": {
      "filePath": "auth.callback.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
